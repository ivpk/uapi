name: traceparent
in: header
description: |
  The `traceparent` request header represents the incoming request in a tracing system in a common format, understood by all vendors.
  It has four fields - `version` `trace-id` `parent-id` `trace-flags` separated by `-`.

  Version `version` is an 8-bit unsigned integer value, serialized as an ASCII string with two characters. Version 255 `"ff"` is invalid.

  `trace-id` is the ID of the whole trace forest and is used to uniquely identify a distributed trace through a system. It is represented as a 16-byte array. All bytes as zero `00000000000000000000000000000000` is considered an invalid value. If the `trace-id` value is invalid (for example if it contains non-allowed characters or all zeros), vendors MUST ignore the entire header.

  `parent-id` is the ID of this request as known by the caller (in some tracing systems, this is known as the `span-id`, where a `span` is the execution of a client request). It is represented as an 8-byte array. All bytes as zero `0000000000000000` is considered an invalid value. Vendors MUST ignore the `traceparent` when the `parent-id` is invalid (for example, if it contains non-lowercase hex characters).

  `trace-flags` is an 8-bit field that controls tracing flags such as sampling, trace level, etc. These flags are recommendations given by the caller rather than strict rules to follow. Like other fields, `trace-flags` is hex-encoded. For example, all 8 flags set would be `ff` and no flags set would be `00`.
required: true
schema:
  type: string
  pattern: ^[0-9]{2}-[A-Fa-f0-9]{32}-[A-Fa-f0-9]{16}-[0-9]{2}
  examples:
    - 00-0af7651916cd43dd8448eb211c80319c-00f067aa0ba902b7-01
